
// Without running the code below, explain in your own words
// what the result of each block of code will be and why.
// If there are any faulty outputs, please write on how we can fix
// them.

// Block 1

// function funcA() {
// console.log(a);
// console.log(foo());
// var a = 1;
// function foo() {
// return 2;
// }
// }
// funcA();


//a will be unidentified 
// foo will print 2 
//how tp fix : write te console log at the end of the function 

// Block 2

// var fullName = 'John Doe';
// var obj = {
// fullName: 'Colin Ihrig',
// prop: {
// fullName: 'Aurelio De Rosa',
// getFullName: function () {
// return this.fullName;
// }
// }
// };
// console.log(obj.prop.getFullName());
// var test = obj.prop.getFullName;
// console.log(test());

// results: first console print  -"aurelio de rosa"
//          second cons print - "undefined" - test are not containing -fullName: .
//how to fix: can't print the test

// Block 3

// function funcB() {
// let a = b = 0;
// a++;
// return a;
// }
// funcB();
// console.log(typeof a);
// console.log(typeof b);

// results: a-undefind - b-number -Because b-global -and can be print. a-is local and cannot be print out side the block.
//to print a and b - we should get the console inside the function . 

// Block 4

// function funcC() {
// console.log("1");
// }
// funcC();
// function funcC() {
// console.log("2");
// }
// funcC();

//results : will print the 2 twice because its will get the second string 
// how to fix : change the name of the second function.

// Block 5

// function funcD1() {
// d = 1;
// }
// funcD1();
// console.log(d);
// function funcD2() {
// var e = 1;
// }
// funcD2();
// console.log(e);

//results: d will print because is a global number , e will make bug because it already defined ;
//...fix: get the consol of e inside the funcD2 ;


// Block 6

function funcE() {
console.log("Value of f in local scope: ", f);
}
console.log("Value of f in global scope: ", f);
var f = 1;
funcE();

//results: first f console will be : undefined  , the second will be un 1
//...fix: put the declaration of f before the console , 